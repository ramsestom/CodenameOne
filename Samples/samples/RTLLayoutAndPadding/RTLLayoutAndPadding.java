package com.codename1.samples;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import static com.codename1.ui.ComponentSelector.$;
import com.codename1.ui.Container;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.plaf.RoundBorder;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class RTLLayoutAndPadding {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");
        UIManager.getInstance().getLookAndFeel().setRTL(true);

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Hi World", BoxLayout.y());
        Label l = new Label("Hi World");
        FlowLayout fl = new FlowLayout();
        fl.setAlign(CENTER);
        
        Container row = new Container(fl);
        row.add(new Label("Center"));
        $(row).selectAllStyles()
                .setPaddingMillimeters(3f)
                .setBgColor(0x003366).setBorder(RoundBorder.create());
        hi.add(row);
        fl = new FlowLayout();
        fl.setAlign(RIGHT);
        row = new Container(fl);
        row.add(new Label("Right"));
        $(row).selectAllStyles()
                .setPaddingMillimeters(3f)
                .setBgColor(0x003366).setBorder(RoundBorder.create());
        hi.add(row);
        fl = new FlowLayout();
        fl.setAlign(LEFT);
        row = new Container(fl);
        row.add(new Label("Left"));
        $(row).selectAllStyles()
                .setPaddingMillimeters(3f)
                .setBgColor(0x003366).setBorder(RoundBorder.create());
        hi.add(row);
        
        fl = new FlowLayout();
        fl.setAlign(CENTER);
        row = new Container(fl);
        row.add(new Label("Center"));
        $(row).selectAllStyles()
                .setPaddingMillimeters(1f, 2f, 1f, 5f)
                
                .setBgColor(0x003366).setBorder(RoundBorder.create());
        hi.add(row);
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
