package com.codename1.samples;


import com.codename1.io.ConnectionRequest;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.processing.Result;
import com.codename1.ui.Container;
import com.codename1.ui.EDTProfilerView;
import com.codename1.ui.FontImage;
import com.codename1.ui.layouts.BorderLayout;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class ScrollingPerformanceTest {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Result res = null;
        try {
            Map m = ConnectionRequest.fetchJSON("https://jsonplaceholder.typicode.com/posts");
            res = Result.fromContent(m);
        } catch (IOException ex) {
            Log.e(ex);
        }
        
        Form hi = new Form("Hi World", new BorderLayout());
        Container cnt = new Container(BoxLayout.y());
        cnt.setScrollableY(true);
        for (Object o : res.getAsArray("root")) {
            Result user = Result.fromContent((Map)o);
            Label l = new Label(user.getAsString("title"));
            l.setMaterialIcon(FontImage.MATERIAL_PLAY_CIRCLE_FILLED);
            cnt.add(l);
        }
        EDTProfilerView profiler = new EDTProfilerView();

        Display.getInstance().setEDTProfiler(profiler);
        hi.add(BorderLayout.NORTH, profiler);
        hi.add(BorderLayout.CENTER, cnt);
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
